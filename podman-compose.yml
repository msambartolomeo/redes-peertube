services:
  caddy:
    image: caddy:2.8-alpine
    restart: unless-stopped
    command: "caddy reverse-proxy --from https://${PEERTUBE_DOMAIN}:443 --to http://peertube:9000"
    cap_add:
      - NET_ADMIN
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/caddy:/data:z
    links:
      - peertube
    depends_on:
      peertube:
        condition: service_started

  peertube:
    image: chocobozzz/peertube:production-bookworm
    networks:
      default:
        ipv4_address: 172.18.0.42
    volumes:
      - ./data/data:/data:z
      - ./production.yaml:/config/production.yaml:z
      - ./data/config:/config:z
    links:
      - postgres
      - redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - ./data/db:/var/lib/postgresql/data:Z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:6-alpine
    volumes:
      - ./data/redis:/data:z
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  default:
    ipam:
      driver: host-local
      config:
        - subnet: 172.18.0.0/16
